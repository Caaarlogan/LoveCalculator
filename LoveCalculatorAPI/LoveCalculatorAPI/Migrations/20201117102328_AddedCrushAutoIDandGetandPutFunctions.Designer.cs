// <auto-generated />
using LoveCalculatorAPI.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace LoveCalculatorAPI.Migrations
{
    [DbContext(typeof(ApplicationDatabase))]
    [Migration("20201117102328_AddedCrushAutoIDandGetandPutFunctions")]
    partial class AddedCrushAutoIDandGetandPutFunctions
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("LoveCalculatorAPI.Models.Crush", b =>
                {
                    b.Property<int>("CrushID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("CrushNameCrush_Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Crush_Instances")
                        .HasColumnType("int");

                    b.Property<string>("Crush_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserNameUser_Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("User_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CrushID");

                    b.HasIndex("CrushNameCrush_Name");

                    b.HasIndex("UserNameUser_Name");

                    b.ToTable("Crush");
                });

            modelBuilder.Entity("LoveCalculatorAPI.Models.CrushName", b =>
                {
                    b.Property<string>("Crush_Name")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Crush_Name_Instances")
                        .HasColumnType("int");

                    b.HasKey("Crush_Name");

                    b.ToTable("CrushName");
                });

            modelBuilder.Entity("LoveCalculatorAPI.Models.UserName", b =>
                {
                    b.Property<string>("User_Name")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("User_Name_Instances")
                        .HasColumnType("int");

                    b.HasKey("User_Name");

                    b.ToTable("UserName");
                });

            modelBuilder.Entity("LoveCalculatorAPI.Models.Crush", b =>
                {
                    b.HasOne("LoveCalculatorAPI.Models.CrushName", null)
                        .WithMany("Crush")
                        .HasForeignKey("CrushNameCrush_Name");

                    b.HasOne("LoveCalculatorAPI.Models.UserName", null)
                        .WithMany("Crush")
                        .HasForeignKey("UserNameUser_Name");
                });

            modelBuilder.Entity("LoveCalculatorAPI.Models.CrushName", b =>
                {
                    b.Navigation("Crush");
                });

            modelBuilder.Entity("LoveCalculatorAPI.Models.UserName", b =>
                {
                    b.Navigation("Crush");
                });
#pragma warning restore 612, 618
        }
    }
}
